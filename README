== java-u2flib-server
Serverside https://fidoalliance.org/specifications[U2F] library for Java (and other JVM languages). Provides functionality for registering
U2F devices and authenticate with said devices.

NOTE: To learn about U2F and how to use a U2F library, visit
http://developers.yubico.com/U2F[developers.yubico.com/U2F].

=== Dependency
[source,xml]
 <dependency>
   <groupId>com.yubico</groupId>
   <artifactId>u2flib-server-core</artifactId>
   <version>0.12.1</version>
 </dependency>

=== API
The library exposes the following methods in the `U2F` class:

[source,java]
----
/**
* Initiates the registration of a device.
*
* @param appId the U2F AppID. // <1>
* @return a RegisterRequest, which should be sent to the client and temporary saved by
* the server.
*/
public RegisterRequest startRegistration(String appId);

/**
* Finishes a previously started registration.
*
* @param request
* @param response the response from the device/client.
* @return a DeviceRegistration. Servers should persist this.
*/
public void finishRegistration(
	RegisterRequest request,
	RegisterResponse response
) throws U2fException;

/**
* Initiates the authentication process.
*
* @param appId the U2F AppID. // <1>
* @param the previously finished registration, for which to initiate authentication.
* @return a AuthenticateRequest which should be sent to the client and temporary saved by
* the server.
*/
public AuthenticateRequest startAuthentication(
	String appId, 
	DeviceRegistration registration
);

/**
* Finishes a previously started authentication.
*
* @param authenticateRequest
* @param response the response from the device/client.
* @param the same registration that was passed to startAuthentication().
*/
public int finishAuthentication(
	AuthenticateRequest request,
	AuthenticateResponse response,
	DeviceRegistration registration
) throws U2fException;
----
<1> The `appId` parameter is explained link:https://developers.yubico.com/U2F/App_ID.html[here].

JavaDoc can be found at https://developers.yubico.com/java-u2flib-server[developers.yubico.com/java-u2flib-server].

=== Serialization
You have two options for serialization of relevant classes
(RegisterRequest, AuthenticateRequest and DeviceRegistration):

 - Using their `toJson()` method.
 - Using Java's built in serialization mechanism (since they implement `java.io.Serializable`)


=== Real world example
See link:u2flib-server-demo[`u2flib-server-demo`]; a simple demo server, showcasing a real world example.

=== Advanced topics

==== Verifying attestation certificates.
Attestation certificates can be verified like this:

[source,java]
----
DeviceRegistration registration =
	U2F.finishRegistration(request, response);
registration.getAttestationCertificate().verify(VENDOR_CA);
----
